0001   0000             ;==================================================================================
0002   0000             ; Contents of this file are copyright Grant Searle
0003   0000             ; HEX routine from Joel Owens.
0004   0000             ;
0005   0000             ; You have permission to use this for NON COMMERCIAL USE ONLY
0006   0000             ; If you wish to use it elsewhere, please include an acknowledgement to myself.
0007   0000             ;
0008   0000             ; http://searle.hostei.com/grant/index.html
0009   0000             ;
0010   0000             ; eMail: home.micros01@btinternet.com
0011   0000             ;
0012   0000             ; If the above don't work, please perform an Internet search to see if I have
0013   0000             ; updated the web page hosting service.
0014   0000             ;
0015   0000             ;==================================================================================
0016   0000             
0017   0000             TPA	.EQU	100H
0018   0000             REBOOT	.EQU	0H
0019   0000             BDOS	.EQU	5H
0020   0000             CONIO	.EQU	6
0021   0000             CONINP	.EQU	1
0022   0000             CONOUT	.EQU	2
0023   0000             PSTRING	.EQU	9
0024   0000             MAKEF	.EQU	22
0025   0000             CLOSEF	.EQU	16
0026   0000             WRITES	.EQU	21
0027   0000             DELF	.EQU	19
0028   0000             SETUSR	.EQU	32
0029   0000             
0030   0000             CR	.EQU	0DH
0031   0000             LF	.EQU	0AH
0032   0000             
0033   0000             FCB	.EQU	05CH
0034   0000             BUFF	.EQU	080H
0035   0000             
0036   0100             	.ORG TPA
0037   0100             
0038   0100             
0039   0100 3E 00       	LD	A,0
0040   0102 32 6D 02    	LD	(buffPos),A
0041   0105 32 71 02    	LD	(checkSum),A
0042   0108 32 72 02    	LD	(byteCount),A
0043   010B 32 70 02    	LD	(printCount),A
0044   010E 21 80 00    	LD	HL,BUFF
0045   0111 22 6E 02    	LD	(buffPtr),HL
0046   0114             
0047   0114             
0048   0114 CD 39 02    WAITLT:	CALL	GETCHR
0049   0117 FE 55       	CP	'U'
0050   0119 CA 2A 02    	JP	Z,SETUSER
0051   011C FE 3A       	CP	':'
0052   011E 20 F4       	JR	NZ,WAITLT
0053   0120             
0054   0120             
0055   0120 0E 13       	LD	C,DELF
0056   0122 11 5C 00    	LD	DE,FCB
0057   0125 CD 05 00    	CALL	BDOS
0058   0128             
0059   0128 0E 16       	LD	C,MAKEF
0060   012A 11 5C 00    	LD	DE,FCB
0061   012D CD 05 00    	CALL	BDOS
0062   0130             
0063   0130             GETHEX:
0064   0130 CD 39 02    	CALL 	GETCHR
0065   0133 FE 3E       	CP	'>'
0066   0135 28 61       	JR	Z,CLOSE
0067   0137 47          	LD   B,A
0068   0138 C5          	PUSH BC
0069   0139 CD 39 02    	CALL GETCHR
0070   013C C1          	POP BC
0071   013D 4F          	LD   C,A
0072   013E             
0073   013E CD 4C 02    	CALL BCTOA
0074   0141             
0075   0141 47          	LD	B,A
0076   0142 3A 71 02    	LD	A,(checkSum)
0077   0145 80          	ADD	A,B
0078   0146 32 71 02    	LD	(checkSum),A
0079   0149 3A 72 02    	LD	A,(byteCount)
0080   014C 3C          	INC	A
0081   014D 32 72 02    	LD	(byteCount),A
0082   0150             
0083   0150 78          	LD	A,B
0084   0151             
0085   0151 2A 6E 02    	LD	HL,(buffPtr)
0086   0154             
0087   0154 77          	LD	(HL),A
0088   0155 23          	INC	HL
0089   0156 22 6E 02    	LD	(buffPtr),HL
0090   0159             
0091   0159 3A 6D 02    	LD	A,(buffPos)
0092   015C 3C          	INC	A
0093   015D 32 6D 02    	LD	(buffPos),A
0094   0160 FE 80       	CP	80H
0095   0162             
0096   0162 20 32       	JR	NZ,NOWRITE
0097   0164             
0098   0164 0E 15       	LD	C,WRITES
0099   0166 11 5C 00    	LD	DE,FCB
0100   0169 CD 05 00    	CALL	BDOS
0101   016C 3E 2E       	LD	A,'.'
0102   016E CD 45 02    	CALL	PUTCHR
0103   0171             
0104   0171                     ; New line every 8K (64 dots)
0105   0171 3A 70 02    	LD	A,(printCount)
0106   0174 3C          	INC	A
0107   0175 FE 40       	CP	64
0108   0177 20 0F       	JR	NZ,noCRLF
0109   0179 32 70 02    	LD	(printCount),A
0110   017C 3E 0D       	LD	A,CR
0111   017E CD 45 02    	CALL	PUTCHR
0112   0181 3E 0A       	LD	A,LF
0113   0183 CD 45 02    	CALL	PUTCHR
0114   0186 3E 00       	LD	A,0
0115   0188 32 70 02    noCRLF:	LD	(printCount),A
0116   018B             
0117   018B 21 80 00    	LD	HL,BUFF
0118   018E 22 6E 02    	LD	(buffPtr),HL
0119   0191             
0120   0191 3E 00       	LD	A,0
0121   0193 32 6D 02    	LD	(buffPos),A
0122   0196             NOWRITE:
0123   0196 18 98       	JR	GETHEX
0124   0198             	
0125   0198             
0126   0198             CLOSE:
0127   0198             
0128   0198 3A 6D 02    	LD	A,(buffPos)
0129   019B FE 00       	CP	0
0130   019D 28 0D       	JR	Z,NOWRITE2
0131   019F             
0132   019F 0E 15       	LD	C,WRITES
0133   01A1 11 5C 00    	LD	DE,FCB
0134   01A4 CD 05 00    	CALL	BDOS
0135   01A7 3E 2E       	LD	A,'.'
0136   01A9 CD 45 02    	CALL	PUTCHR
0137   01AC             
0138   01AC             NOWRITE2:
0139   01AC 0E 10       	LD	C,CLOSEF
0140   01AE 11 5C 00    	LD	DE,FCB
0141   01B1 CD 05 00    	CALL	BDOS
0142   01B4             
0143   01B4             ; Byte count (lower 8 bits)
0144   01B4 CD 39 02    	CALL 	GETCHR
0145   01B7 47          	LD   B,A
0146   01B8 C5          	PUSH BC
0147   01B9 CD 39 02    	CALL GETCHR
0148   01BC C1          	POP BC
0149   01BD 4F          	LD   C,A
0150   01BE             
0151   01BE CD 4C 02    	CALL BCTOA
0152   01C1 47          	LD	B,A
0153   01C2 3A 72 02    	LD	A,(byteCount)
0154   01C5 90          	SUB	B
0155   01C6 FE 00       	CP	0
0156   01C8 28 1A       	JR	Z,byteCountOK
0157   01CA             
0158   01CA 3E 0D       	LD	A,CR
0159   01CC CD 45 02    	CALL	PUTCHR
0160   01CF 3E 0A       	LD	A,LF
0161   01D1 CD 45 02    	CALL	PUTCHR
0162   01D4             
0163   01D4 11 91 02    	LD	DE,countErrMess
0164   01D7 0E 09       	LD	C,PSTRING
0165   01D9 CD 05 00    	CALL	BDOS
0166   01DC             
0167   01DC             	; Sink remaining 2 bytes
0168   01DC CD 39 02    	CALL GETCHR
0169   01DF CD 39 02    	CALL GETCHR
0170   01E2             
0171   01E2 18 3C       	JR	FINISH
0172   01E4             
0173   01E4             byteCountOK:
0174   01E4             
0175   01E4             ; Checksum
0176   01E4 CD 39 02    	CALL 	GETCHR
0177   01E7 47          	LD   B,A
0178   01E8 C5          	PUSH BC
0179   01E9 CD 39 02    	CALL GETCHR
0180   01EC C1          	POP BC
0181   01ED 4F          	LD   C,A
0182   01EE             
0183   01EE CD 4C 02    	CALL BCTOA
0184   01F1 47          	LD	B,A
0185   01F2 3A 71 02    	LD	A,(checkSum)
0186   01F5 90          	SUB	B
0187   01F6 FE 00       	CP	0
0188   01F8 28 14       	JR	Z,checksumOK
0189   01FA             
0190   01FA 3E 0D       	LD	A,CR
0191   01FC CD 45 02    	CALL	PUTCHR
0192   01FF 3E 0A       	LD	A,LF
0193   0201 CD 45 02    	CALL	PUTCHR
0194   0204             
0195   0204 11 76 02    	LD	DE,chkErrMess
0196   0207 0E 09       	LD	C,PSTRING
0197   0209 CD 05 00    	CALL	BDOS
0198   020C 18 12       	JR	FINISH
0199   020E             
0200   020E             checksumOK:
0201   020E 3E 0D       	LD	A,CR
0202   0210 CD 45 02    	CALL	PUTCHR
0203   0213 3E 0A       	LD	A,LF
0204   0215 CD 45 02    	CALL	PUTCHR
0205   0218             
0206   0218 11 73 02    	LD	DE,OKMess
0207   021B 0E 09       	LD	C,PSTRING
0208   021D CD 05 00    	CALL	BDOS
0209   0220             		
0210   0220             
0211   0220             
0212   0220             FINISH:
0213   0220 0E 20       	LD	C,SETUSR
0214   0222 1E 00       	LD	E,0
0215   0224 CD 05 00    	CALL	BDOS
0216   0227             
0217   0227 C3 00 00    	JP	REBOOT
0218   022A             
0219   022A             
0220   022A             SETUSER:
0221   022A CD 39 02    	CALL	GETCHR
0222   022D CD 65 02    	CALL	HEX2VAL
0223   0230 5F          	LD	E,A
0224   0231 0E 20       	LD	C,SETUSR
0225   0233 CD 05 00    	CALL	BDOS
0226   0236 C3 14 01    	JP	WAITLT
0227   0239             
0228   0239             	
0229   0239             ; Get a char into A
0230   0239             ;GETCHR: LD C,CONINP
0231   0239             ;	CALL BDOS
0232   0239             ;	RET
0233   0239             
0234   0239             ; Wait for a char into A (no echo)
0235   0239             GETCHR: 
0236   0239 1E FF       	LD	E,$FF
0237   023B 0E 06       	LD 	C,CONIO
0238   023D CD 05 00    	CALL 	BDOS
0239   0240 FE 00       	CP	0
0240   0242 28 F5       	JR	Z,GETCHR
0241   0244 C9          	RET
0242   0245             
0243   0245             ; Write A to output
0244   0245 0E 02       PUTCHR: LD C,CONOUT
0245   0247 5F          	LD E,A
0246   0248 CD 05 00    	CALL BDOS
0247   024B C9          	RET
0248   024C             
0249   024C             
0250   024C             ;------------------------------------------------------------------------------
0251   024C             ; Convert ASCII characters in B C registers to a byte value in A
0252   024C             ;------------------------------------------------------------------------------
0253   024C 78          BCTOA	LD   A,B	; Move the hi order byte to A
0254   024D D6 30       	SUB  $30	; Take it down from Ascii
0255   024F FE 0A       	CP   $0A	; Are we in the 0-9 range here?
0256   0251 38 02       	JR   C,BCTOA1	; If so, get the next nybble
0257   0253 D6 07       	SUB  $07	; But if A-F, take it down some more
0258   0255 07          BCTOA1	RLCA		; Rotate the nybble from low to high
0259   0256 07          	RLCA		; One bit at a time
0260   0257 07          	RLCA		; Until we
0261   0258 07          	RLCA		; Get there with it
0262   0259 47          	LD   B,A	; Save the converted high nybble
0263   025A 79          	LD   A,C	; Now get the low order byte
0264   025B D6 30       	SUB  $30	; Convert it down from Ascii
0265   025D FE 0A       	CP   $0A	; 0-9 at this point?
0266   025F 38 02       	JR   C,BCTOA2	; Good enough then, but
0267   0261 D6 07       	SUB  $07	; Take off 7 more if it's A-F
0268   0263 80          BCTOA2	ADD  A,B	; Add in the high order nybble
0269   0264 C9          	RET
0270   0265             
0271   0265             ; Change Hex in A to actual value in A
0272   0265 D6 30       HEX2VAL SUB	$30
0273   0267 FE 0A       	CP	$0A
0274   0269 D8          	RET	C
0275   026A D6 07       	SUB	$07
0276   026C C9          	RET
0277   026D             
0278   026D             
0279   026D 00          buffPos	.DB	0H
0280   026E 00 00       buffPtr	.DW	0000H
0281   0270 00          printCount .DB	0H
0282   0271 00          checkSum .DB	0H
0283   0272 00          byteCount .DB	0H
0284   0273 4F 4B 24    OKMess	.BYTE	"OK$"
0285   0276 3D 3D 3D 3D chkErrMess .BYTE	"======Checksum Error======$"
0285   027A 3D 3D 43 68 
0285   027E 65 63 6B 73 
0285   0282 75 6D 20 45 
0285   0286 72 72 6F 72 
0285   028A 3D 3D 3D 3D 
0285   028E 3D 3D 24 
0286   0291 3D 3D 3D 3D countErrMess .BYTE	"======File Length Error======$"
0286   0295 3D 3D 46 69 
0286   0299 6C 65 20 4C 
0286   029D 65 6E 67 74 
0286   02A1 68 20 45 72 
0286   02A5 72 6F 72 3D 
0286   02A9 3D 3D 3D 3D 
0286   02AD 3D 24 
0287   02AF             	.END
tasm: Number of errors = 0
